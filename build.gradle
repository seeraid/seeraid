buildscript {
    repositories {
	    mavenLocal()
    	mavenCentral()
        maven { url 'http://repo.maven.apache.org/maven2' }
	    maven { url "http://repo.spring.io/snapshot" }
	    maven { url "http://repo.spring.io/milestone" }
	    maven { url "http://repo.spring.io/release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.0.RC2")
//        classpath 'com.jfolson:gradle-plugin-rjava:0.1'
    }
}

apply plugin: 'scala'
apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war'
apply plugin: 'spring-boot'
apply plugin: 'base'
//apply plugin: 'rjava'

sourceCompatibility = 1.7

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'http://repo.maven.apache.org/maven2' }
    maven { url 'http://repo.spring.io/milestone' }
    maven { url 'http://repo.spring.io/snapshot' }
    maven { url 'https://repository.jboss.org/nexus/content/repositories/releases' }
    maven { url 'https://oss.sonatype.org/content/repositories/releases' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'http://repository.pentaho.org/artifactory/repo/' }
}

dependencies{
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'jfree:jfreechart:1.0.13'
    compile 'com.mysema.scalagen:scalagen-maven-plugin:0.2.2'
    compile "org.scala-lang:scala-library:2.11.2"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.hibernate:hibernate-core'
    compile "org.thymeleaf:thymeleaf-spring4"
    compile "nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect"
    compile "org.scala-lang:scala-library:2.11.2"
    compile "org.springframework.data:spring-yarn-boot:2.0.0.RELEASE"
    compile "pentaho.weka:pdm-timeseriesforecasting-ce:TRUNK-SNAPSHOT"
    compile "joda-time:joda-time:2.6"
//    compile "nz.ac.waikato.cms.weka:weka-dev:3.7.11"
    compile 'nz.ac.waikato.cms.weka:winnow:1.0.2'
    compile 'nz.ac.waikato.cms.weka:LibSVM:1.0.6'
    compile 'nz.ac.waikato.cms.weka:LibLINEAR:1.0.2'
    compile 'io.prediction:sdk:0.8.2'
    compile 'io.prediction:client:0.8.2'
    compile 'com.jfolson:gradle-plugin-rjava:0.1'
    compile 'com.jfolson:rjava-annotations:0.1'
    compile 'org.nuiton.thirdparty:JRI:0.9-6'
   	compile "org.springframework.boot:spring-boot-starter-websocket"
    compile "org.springframework:spring-messaging"
 //   compile 'org.rosuda.JRI:JRI:'
    
//    compile 




//    compile("nz.ac.waikato.cms.weka:weka-stable:3.6.11")

    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile 'org.scalatest:scalatest_2.11:2.2.1'
    testCompile "junit:junit:4.8.1"
    testCompile("org.springframework.data:spring-yarn-boot-test:2.0.0.RELEASE")
    testCompile("org.hamcrest:hamcrest-core:1.2.1")
    testCompile("org.hamcrest:hamcrest-library:1.2.1")
    testCompile("junit:junit")

//    compile("org.springframework.boot:spring-boot-starter-data-jpa")
//    compile("org.hibernate:hibernate-validator")
//    compile("org.hsqldb:hsqldb")
//    compile("org.webjars:bootstrap:3.1.1")
}

task copyJars(type: Copy) {
    from "$buildDir/libs"
    into "$rootDir/target/"
    include "**/*.jar"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

assemble.doLast {copyJars.execute()}
clean.doLast {ant.delete(dir: "target")}

tasks.create(name: 'myrun', type: JavaExec, dependsOn: classes) {
    main = 'Main'
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}
myrun
/*
task writeNewPom << {
    pom {
        project {
            inceptionYear '2008'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }.writeTo("$buildDir/newpom.xml")
}
*/